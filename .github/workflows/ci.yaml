name: CI

on:
  push:
    paths:
      - 'Dockerfile'
      - '**.js'
      - '**.py'
      - '**.txt'
      - 'templates/**'
      - 'static/**'

env:
  VERSION_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/giropops-senhas:0.${{ github.run_number }}
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/giropops-senhas:latest

permissions:
  contents: read

jobs:
  yaml-lint:
    name: YAML Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: 'Yamllint K8s manifests'
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: 'manifests/base'
        yamllint_config_filepath: '.yamllint.yaml'

    - name: 'Yamllint Kustomize Overlay EKS'
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: 'manifests/overlays/eks'
        yamllint_config_filepath: '.yamllint.yaml'

    - name: 'Yamllint Kustomize Overlay Local'
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: 'manifests/overlays/local'
        yamllint_config_filepath: '.yamllint.yaml'

    - name: 'Yamllint EKS Cluster'
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: 'eks/'
        yamllint_config_filepath: '.yamllint.yaml'

    - name: 'Yamllint Kind Cluster'
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: 'kind/'
        yamllint_config_filepath: '.yamllint.yaml'

    - name: 'Yamllint Load Test - K6 Operator manifests'
      uses: karancode/yamllint-github-action@master
      with:
        yamllint_file_or_dir: 'load-test/'
        yamllint_config_filepath: '.yamllint.yaml'

  k8s-lint:
    name: Kubernetes Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: kube-linter K8s manifests
      uses: stackrox/kube-linter-action@v1
      with:
        directory: manifests/base
        config: .kube-linter.yaml

    - name: kube-linter K6 manifests
      uses: stackrox/kube-linter-action@v1
      with:
        directory: load-test
        config: .kube-linter.yaml

  kind:
    name: KIND - Integration Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.10.0
      with:
        config: kind/cluster.yaml
    - run: make test-app-github-actions

  sast:
    name: SAST
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build before Trivy Scan
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        tags: ${{ env.LATEST_TAG }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.LATEST_TAG }}

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    environment: manual
    needs: [sast, kind]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v2.2.2'

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.VERSION_TAG }},${{ env.LATEST_TAG }}

  cosign:
    name: Cosign
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    needs: [build]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v2.2.2'

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Sign the container image ${{ env.LATEST_TAG }}
      run: cosign sign --yes ${{ env.LATEST_TAG }}

    - name: Sign the container image ${{ env.VERSION_TAG }}
      run: cosign sign --yes ${{ env.VERSION_TAG }}
