apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: prometheus-redis-exporter
    release: kube-prometheus
  name: redis-prometheusrule
spec:
  groups:
  - name: redis
    rules:
    - alert: RedisDown
      annotations:
        description: |-
          Redis instance is down
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis down (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: redis_up == 0
      for: 5m
      labels:
        severity: critical
    - alert: RedisDisconnectedSlaves
      annotations:
        description: |-
          Redis not replicating for all slaves. Consider reviewing the redis replication status.
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis disconnected slaves (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: count without (instance, job) (redis_connected_slaves) - sum without (instance,
        job) (redis_connected_slaves) - 1 > 1
      for: 5m
      labels:
        severity: critical
    - alert: RedisReplicationBroken
      annotations:
        description: |-
          Redis instance lost a slave
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis replication broken (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: delta(redis_connected_slaves[1m]) < 0
      for: 10m
      labels:
        severity: page
    - alert: RedisClusterFlapping
      annotations:
        description: |-
          Changes have been detected in Redis replica connection. This can occur when replica nodes lose connection to the master and reconnect (a.k.a flapping).
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis cluster flapping (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: changes(redis_connected_slaves[1m]) > 1
      for: 5m
      labels:
        severity: page
    - alert: RedisMissingBackup
      annotations:
        description: |-
          Redis has not been backuped for 24 hours
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis missing backup (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: time() - redis_rdb_last_save_timestamp_seconds > 60 * 60 * 24
      for: 5m
      labels:
        severity: critical
    - alert: RedisOutOfSystemMemory
      annotations:
        description: |-
          Redis is running out of system memory (> 90%)
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis out of system memory (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: redis_memory_used_bytes / redis_total_system_memory_bytes * 100 > 90
      for: 5m
      labels:
        severity: page
    - alert: RedisOutOfConfiguredMaxmemory
      annotations:
        description: |-
          Redis is running out of configured maxmemory (> 90%)
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis out of configured maxmemory (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: redis_memory_used_bytes / redis_memory_max_bytes * 100 > 90
      for: 5m
      labels:
        severity: page
    - alert: RedisTooManyConnections
      annotations:
        description: |-
          Redis instance has too many connections
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis too many connections (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: redis_connected_clients > 1000
      for: 5m
      labels:
        severity: warning
    - alert: RedisNotEnoughConnections
      annotations:
        description: |-
          Redis instance should have more connections (> 5)
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis not enough connections (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: redis_connected_clients < 1
      for: 5m
      labels:
        severity: warning
    - alert: RedisRejectedConnections
      annotations:
        description: |-
          Some connections to Redis has been rejected
            VALUE = {{"{{" }} $value {{"}}"}}
            LABELS = {{"{{" }} $labels {{"}}"}}
        summary: Redis rejected connections (instance {{"{{" }} $labels.instance {{"}}"}})
      expr: increase(redis_rejected_connections_total[1m]) > 0
      for: 5m
      labels:
        severity: page
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: giropops-senhas
    release: kube-prometheus
  name: giropops-senhas
spec:
  endpoints:
  - interval: 10s
    path: /metrics
    targetPort: 5000
  selector:
    matchLabels:
      app: giropops-senhas
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: prometheus-redis-exporter
    release: kube-prometheus
  name: prometheus-redis-exporter
spec:
  endpoints:
  - interval: 10s
  selector:
    matchLabels:
      app: redis